// Code generated by entc, DO NOT EDIT.

package revision

import (
	"fmt"

	"github.com/bearchit/gox/entx/available"
)

const (
	// Label holds the string label denoting the revision type in the database.
	Label = "revision"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldActivation holds the string denoting the activation field in the database.
	FieldActivation = "activation"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// Table holds the table name of the revision in the database.
	Table = "revisions"
)

// Columns holds all SQL columns for revision fields.
var Columns = []string{
	FieldID,
	FieldActivation,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

const DefaultActivation available.Activation = "ACTIVATED"

// ActivationValidator is a validator for the "activation" field enum values. It is called by the builders before save.
func ActivationValidator(a available.Activation) error {
	switch a {
	case "ACTIVATED", "DEACTIVATED":
		return nil
	default:
		return fmt.Errorf("revision: invalid enum value for activation field: %q", a)
	}
}
